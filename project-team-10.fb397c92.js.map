{"mappings":"A,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,E,Q,C,I,E,E,S,E,E,SCGC,AAAA,CAAA,UACC,IAAM,EAAsB,SAAS,aAAa,CAAC,kBAC7C,EAAe,EAAoB,aAAa,CAAC,UACjD,EAA2B,EAAoB,aAAa,CAAC,MAC7D,EAAsB,SAAS,aAAa,CAAC,kBAE7C,EAAgB,GAAI,CAAA,EAAA,EAAA,WAAU,AAAV,EAAY,YAEtC,OAAM,AAAA,CAAA,EAAA,EAAA,cAAa,AAAb,EAAe,EAAc,EAA0B,GAE7D,EAAc,IAAI,CAAC,EAAA,mBAAkB,EAErC,EAAoB,gBAAgB,CAAC,QAAS,MAAO,CAAA,OAAE,CAAM,CAAE,IAC7D,GAAI,AAAmB,UAAnB,EAAO,OAAO,CAAc,OAEhC,IAAM,EAAgB,EAAO,OAAO,CAAC,QAAQ,CAE7C,GAAI,AAAkB,QAAlB,EAAyB,CAC3B,MAAM,AAAA,CAAA,EAAA,EAAA,cAAa,AAAb,EAAe,EAAc,GACnC,EAAc,eAAe,CAAC,EAAA,mBAAkB,EAChD,MACF,CAEA,MAAM,AAAA,CAAA,EAAA,EAAA,kBAAiB,AAAjB,EAAmB,GACzB,EAAc,eAAe,CAAC,EAAA,mBAAkB,EAChD,EAAyB,SAAS,CAAG,AAAA,CAAA,EAAA,EAAA,WAAU,AAAV,EAAY,EACnD,EACF,CAAA","sources":["<anon>","src/scripts/render-books.script.js"],"sourcesContent":["\n      var $parcel$global =\n        typeof globalThis !== 'undefined'\n          ? globalThis\n          : typeof self !== 'undefined'\n          ? self\n          : typeof window !== 'undefined'\n          ? window\n          : typeof global !== 'undefined'\n          ? global\n          : {};\n  \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire0688\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire0688\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $2GpPp = parcelRequire(\"2GpPp\");\n\nvar $ciXGU = parcelRequire(\"ciXGU\");\n(async ()=>{\n    const booksSectionElement = document.querySelector(\".books-section\");\n    const booksElement = booksSectionElement.querySelector(\".books\");\n    const booksSectionTitleElement = booksSectionElement.querySelector(\"h2\");\n    const categoryListElement = document.querySelector(\".category-list\");\n    const modalBookInfo = new (0, $ciXGU.ModalWindow)(\"book-info\");\n    await (0, $2GpPp.renderTopBooks)(booksElement, booksSectionTitleElement, modalBookInfo);\n    modalBookInfo.init((0, $2GpPp.openBookInfoHandler));\n    categoryListElement.addEventListener(\"click\", async ({ target: target })=>{\n        if (target.tagName !== \"LABEL\") return;\n        const categoryTitle = target.dataset.category;\n        if (categoryTitle === \"all\") {\n            await (0, $2GpPp.renderTopBooks)(booksElement, booksSectionTitleElement);\n            modalBookInfo.initOpenButtons((0, $2GpPp.openBookInfoHandler));\n            return;\n        }\n        await (0, $2GpPp.renderBookCategory)(categoryTitle);\n        modalBookInfo.initOpenButtons((0, $2GpPp.openBookInfoHandler));\n        booksSectionTitleElement.innerHTML = (0, $2GpPp.formatTitle)(categoryTitle);\n    });\n})();\n\n\n//# sourceMappingURL=project-team-10.fb397c92.js.map\n","import {openBookInfoHandler, renderBookCategory, formatTitle, renderTopBooks} from \"./utils\";\r\nimport { ModalWindow } from \"./classes\";\r\n\r\n(async () => {\r\n  const booksSectionElement = document.querySelector(\".books-section\");\r\n  const booksElement = booksSectionElement.querySelector(\".books\");\r\n  const booksSectionTitleElement = booksSectionElement.querySelector(\"h2\");\r\n  const categoryListElement = document.querySelector(\".category-list\");\r\n\r\n  const modalBookInfo = new ModalWindow(\"book-info\");\r\n\r\n  await renderTopBooks(booksElement, booksSectionTitleElement, modalBookInfo);\r\n\r\n  modalBookInfo.init(openBookInfoHandler);\r\n\r\n  categoryListElement.addEventListener(\"click\", async ({ target }) => {\r\n    if (target.tagName !== \"LABEL\") return;\r\n\r\n    const categoryTitle = target.dataset.category;\r\n\r\n    if (categoryTitle === \"all\") {\r\n      await renderTopBooks(booksElement, booksSectionTitleElement);\r\n      modalBookInfo.initOpenButtons(openBookInfoHandler);\r\n      return;\r\n    }\r\n\r\n    await renderBookCategory(categoryTitle);\r\n    modalBookInfo.initOpenButtons(openBookInfoHandler);\r\n    booksSectionTitleElement.innerHTML = formatTitle(categoryTitle);\r\n  });\r\n})();\r\n"],"names":["$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$2GpPp","$ciXGU","booksSectionElement","document","querySelector","booksElement","booksSectionTitleElement","categoryListElement","modalBookInfo","ModalWindow","renderTopBooks","openBookInfoHandler","addEventListener","target","tagName","categoryTitle","dataset","category","initOpenButtons","renderBookCategory","innerHTML","formatTitle"],"version":3,"file":"project-team-10.fb397c92.js.map"}