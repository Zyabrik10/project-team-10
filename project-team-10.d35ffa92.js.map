{"mappings":"A,M,gD,C,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,E,Q,C,I,E,E,SCGE,IAAM,EAAqB,SAAS,aAAa,CAAC,wBAGhC,CAAA,eAFA,AAAA,CAAA,EAAA,EAAA,mBAAkB,AAAlB,EAAoB,QAAS,iBAG7C,EAAmB,OAAO,CAAG,CAAA,EAC7B,SAAS,eAAe,CAAC,SAAS,CAAC,GAAG,CAAC,eAGzC,EAAmB,gBAAgB,CAAC,SAAU,WACxC,IAAI,CAAC,OAAO,EACd,AAAA,CAAA,EAAA,EAAA,mBAAkB,AAAlB,EAAoB,QAAS,cAC7B,SAAS,eAAe,CAAC,SAAS,CAAC,GAAG,CAAC,gBAEvC,AAAA,CAAA,EAAA,EAAA,mBAAkB,AAAlB,EAAoB,QAAS,eAC7B,SAAS,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC,cAE9C","sources":["<anon>","src/scripts/switch-theme.script.js"],"sourcesContent":["import \"./project-team-10.1fe5741d.js\";\n\n\n      var $parcel$global =\n        typeof globalThis !== 'undefined'\n          ? globalThis\n          : typeof self !== 'undefined'\n          ? self\n          : typeof window !== 'undefined'\n          ? window\n          : typeof global !== 'undefined'\n          ? global\n          : {};\n  \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire0688\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire0688\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $2GpPp = parcelRequire(\"2GpPp\");\n(()=>{\n    const inputThemeSwitcher = document.querySelector(\"#theme-input-switcher\");\n    const prefTheme = (0, $2GpPp.localStorageGetItem)(\"theme\", \"light-theme\");\n    if (prefTheme === \"dark-theme\") {\n        inputThemeSwitcher.checked = true;\n        document.documentElement.classList.add(\"dark-theme\");\n    }\n    inputThemeSwitcher.addEventListener(\"change\", function() {\n        if (this.checked) {\n            (0, $2GpPp.localStorageSetItem)(\"theme\", \"dark-theme\");\n            document.documentElement.classList.add(\"dark-theme\");\n        } else {\n            (0, $2GpPp.localStorageSetItem)(\"theme\", \"light-theme\");\n            document.documentElement.classList.remove(\"dark-theme\");\n        }\n    });\n})();\n\n\n//# sourceMappingURL=project-team-10.d35ffa92.js.map\n","import { localStorageGetItem, localStorageSetItem } from \"./utils\";\n\n(() => {\n  const inputThemeSwitcher = document.querySelector(\"#theme-input-switcher\");\n  const prefTheme = localStorageGetItem(\"theme\", \"light-theme\");\n\n  if (prefTheme === \"dark-theme\") {\n    inputThemeSwitcher.checked = true;\n    document.documentElement.classList.add(\"dark-theme\");\n  }\n\n  inputThemeSwitcher.addEventListener(\"change\", function () {\n    if (this.checked) {\n      localStorageSetItem(\"theme\", \"dark-theme\");\n      document.documentElement.classList.add(\"dark-theme\");\n    } else {\n      localStorageSetItem(\"theme\", \"light-theme\");\n      document.documentElement.classList.remove(\"dark-theme\");\n    }\n  });\n})();\n"],"names":["$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$2GpPp","inputThemeSwitcher","document","querySelector","localStorageGetItem","checked","documentElement","classList","add","addEventListener","localStorageSetItem","remove"],"version":3,"file":"project-team-10.d35ffa92.js.map"}