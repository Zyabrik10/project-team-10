{"mappings":"A,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,E,Q,C,I,E,E,SCME,MAAM,EAAa,SAAS,gBAAgB,CAC1C,yCAGI,EAA0B,AAAA,CAAA,EAAA,EAAA,mBAAkB,AAAlB,EAAoB,kBAAmB,CAAC,GAgBxE,SAAS,EAAe,CAAK,EAC3B,GAAI,CAAC,EAAM,KAAK,CAAC,IAAI,GAAG,MAAM,CAAE,YAC9B,EAAM,SAAS,CAAC,MAAM,CAAC,UAIzB,EAAM,SAAS,CAAC,GAAG,CAAC,SACtB,CArBA,EAAW,OAAO,CAAC,AAAC,QAuBmB,EAAyB,CAC1D,EADiC,EAtBP,EAuBH,CAAC,CADkC,EAtBP,GAuBrB,IAAI,CAAC,CACrC,EAAM,KAAK,CAAG,CAAuB,CAAC,EAAM,IAAI,CAAC,EAEjD,AAAA,CAAA,EAAA,EAAA,mBAAkB,AAAlB,EAAoB,kBAAmB,CACrC,GAAG,CAAuB,CAC1B,CAAC,EAAM,IAAI,CAAC,CAAE,EAAM,KAAK,CAAC,IAAI,EAChC,GACA,CAAuB,CAAC,EAAM,IAAI,CAAC,CAAG,EAAM,KAAK,CAAC,IAAI,IA7BxD,EAAe,GAEf,EAAM,gBAAgB,CAAC,QAAS,KAC9B,EAAe,GACf,AAAA,CAAA,EAAA,EAAA,mBAAkB,AAAlB,EAAoB,kBAAmB,CACrC,GAAG,CAAuB,CAC1B,CAAC,EAAM,IAAI,CAAC,CAAE,EAAM,KAAK,CAAC,IAAI,EAChC,GACA,CAAuB,CAAC,EAAM,IAAI,CAAC,CAAG,EAAM,KAAK,CAAC,IAAI,EACxD,EACF","sources":["<anon>","src/scripts/form-input.script.js"],"sourcesContent":["\n      var $parcel$global =\n        typeof globalThis !== 'undefined'\n          ? globalThis\n          : typeof self !== 'undefined'\n          ? self\n          : typeof window !== 'undefined'\n          ? window\n          : typeof global !== 'undefined'\n          ? global\n          : {};\n  \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire0688\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire0688\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $2GpPp = parcelRequire(\"2GpPp\");\n(()=>{\n    const formsInput = document.querySelectorAll(\"#registration-modal .forms form input\");\n    const localStorageInputValues = (0, $2GpPp.localStorageGetItem)(\"user-form-input\", {});\n    formsInput.forEach((input)=>{\n        setInputValueFromLocalStorage(localStorageInputValues, input);\n        setInputActive(input);\n        input.addEventListener(\"input\", ()=>{\n            setInputActive(input);\n            (0, $2GpPp.localStorageSetItem)(\"user-form-input\", {\n                ...localStorageInputValues,\n                [input.name]: input.value.trim()\n            });\n            localStorageInputValues[input.name] = input.value.trim();\n        });\n    });\n    function setInputActive(input) {\n        if (!input.value.trim().length) {\n            input.classList.remove(\"active\");\n            return;\n        }\n        input.classList.add(\"active\");\n    }\n    function setInputValueFromLocalStorage(localStorageInputValues, input) {\n        if (localStorageInputValues[input.name]) input.value = localStorageInputValues[input.name];\n        else {\n            (0, $2GpPp.localStorageSetItem)(\"user-form-input\", {\n                ...localStorageInputValues,\n                [input.name]: input.value.trim()\n            });\n            localStorageInputValues[input.name] = input.value.trim();\n        }\n    }\n})();\n\n\n//# sourceMappingURL=project-team-10.bc8bffab.js.map\n","import {\n  localStorageGetItem,\n  localStorageSetItem,\n} from \"./utils\";\n\n(() => {\n  const formsInput = document.querySelectorAll(\n    \"#registration-modal .forms form input\"\n  );\n\n  const localStorageInputValues = localStorageGetItem(\"user-form-input\", {});\n\n  formsInput.forEach((input) => {\n    setInputValueFromLocalStorage(localStorageInputValues, input);\n    setInputActive(input);\n\n    input.addEventListener(\"input\", () => {\n      setInputActive(input);\n      localStorageSetItem(\"user-form-input\", {\n        ...localStorageInputValues,\n        [input.name]: input.value.trim(),\n      });\n      localStorageInputValues[input.name] = input.value.trim();\n    });\n  });\n  \n  function setInputActive(input) {\n    if (!input.value.trim().length) {\n      input.classList.remove(\"active\");\n      return;\n    }\n  \n    input.classList.add(\"active\");\n  }\n  \n  function setInputValueFromLocalStorage(localStorageInputValues, input) {\n    if (localStorageInputValues[input.name]) {\n      input.value = localStorageInputValues[input.name];\n    } else {\n      localStorageSetItem(\"user-form-input\", {\n        ...localStorageInputValues,\n        [input.name]: input.value.trim(),\n      });\n      localStorageInputValues[input.name] = input.value.trim();\n    }\n  }\n})();"],"names":["$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$2GpPp","formsInput","document","querySelectorAll","localStorageInputValues","localStorageGetItem","setInputActive","input","value","trim","length","classList","remove","add","forEach","name","localStorageSetItem","addEventListener"],"version":3,"file":"project-team-10.bc8bffab.js.map"}